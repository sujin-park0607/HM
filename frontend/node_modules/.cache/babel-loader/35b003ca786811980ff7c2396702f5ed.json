{"ast":null,"code":"var _jsxFileName = \"C:\\\\sujinworkspace\\\\test_capstone\\\\peoplecountfrount\\\\src\\\\pages\\\\RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport palette from '../lib/styles/palette';\nimport { useState } from 'react';\nimport { fetchRegister } from './api/PatchRegister';\nimport { Link, useNavigate } from 'react-router-dom';\n/**\n * 회원가입 또는 로그인 폼을 보여줍니다.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthFormBlock = styled.div`\n  padding-top:20px;\n  h3 {\n    margin: 0;\n    color: ${palette.gray[8]};\n    margin-bottom: 1rem;\n  }\n  form{\n    width:484px;\n  }\n`;\n/**\n* 스타일링된 input\n*/\n\n_c = AuthFormBlock;\nconst StyledInput = styled.input`\n  display:block;\n  font-size: 1rem;\n  border: none;\n  border-bottom: 2px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n  margin-top: 1rem;\n\n`;\n/**\n* 폼 하단에 로그인 혹은 회원가입 링크를 보여줌\n*/\n\n_c2 = StyledInput;\nconst Footer = styled.div`\n  margin-top: 2rem;\n  text-align: right;\n  a {\n    color: ${palette.gray[6]};\n    text-decoration: underline;\n    &:hover {\n      color: ${palette.gray[9]};\n    }\n  }\n`;\n/**\n * 회원가입 / 로그인 페이지의 레이아웃을 담당하는 컴포넌트입니다.\n */\n\n/* 화면 전체를 채움 */\n\n_c3 = Footer;\nconst AuthTemplateBlock = styled.div`\n  min-width:1280px;\n  min-height:720px;\n  background-size: 1920px;\n  background-image: linear-gradient( rgba(20, 20, 20, 0.5), rgba(20, 20, 20, 0.5) ), url(\"https://images.unsplash.com/photo-1528642474498-1af0c17fd8c3?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1169&q=80\");\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  /* flex로 내부 내용 중앙 정렬 */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  .flex_container{\n    display:flex;\n    width: 1280px;\n    height:720px;\n    box-shadow: 27px 43px 43px -26px rgba(89,89,89,0.39);\n  }\n`;\n/* 흰색 박스 */\n\n_c4 = AuthTemplateBlock;\nconst RightBox = styled.div`\n  display:flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\n  padding: 2rem;\n  width: 640px;\n  height:720px;\n  border-radius: 0px 10px 10px 0px;\n  background: white;\n`;\n_c5 = RightBox;\nconst LeftBox = styled.div`\n  .logo-area {\n    display: block;\n    padding-bottom: 2rem;\n    text-align: center;\n    font-weight: bold;\n    letter-spacing: 2px;\n  }\n  font-family: 'Alata', sans-serif;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\n  padding: 2rem;\n  width: 640px;\n  height:720px;\n  border-radius: 10px 0px 0px 10px;\n  background-image: radial-gradient(ellipse farthest-corner at 0 140%, #616161 0%, #333 70%, #424242 70%);\n\n  .top-logo-wrap{\n    width:450px;\n    height:180px;\n  }\n  h1{\n    margin: auto;\n    width:450px;\n    font-size:51px;\n    color: white;\n    text-align: right;\n    opacity: 0.9;\n  }\n  p{\n    color: white;\n    width:450px;\n    margin: auto;\n    padding-top: 50px;\n    font-size:24px;\n    text-align: right;\n    opacity: 0.8;\n  }\n`;\n_c6 = LeftBox;\nconst ErrorBox = styled.div`\n  color: #FF6E6E;\n`;\n_c7 = ErrorBox;\nconst SuccessBox = styled.div`\n  color: green;\n`;\n_c8 = SuccessBox;\nconst IdBox = styled.div`\n  display:flex;\n`;\n_c9 = IdBox;\nconst IdCheckButton = styled.button`\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  border: none;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  white-space:nowrap;\n  background: ${palette.gray[8]};\n  &:hover {\n    background: ${palette.gray[6]};\n  }\n`;\n_c10 = IdCheckButton;\nconst IdCheckButtonDisabled = styled.button`\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  border: none;\n  color: white;\n  outline: none;\n  white-space:nowrap;\n  background: ${palette.gray[3]};\n`;\n_c11 = IdCheckButtonDisabled;\nconst StyledButton = styled.button`\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  width: 100%;\n  font-size: 1.125rem;\n  margin-top: 1rem;\n  background: ${palette.gray[8]};\n  &:hover {\n    background: ${palette.gray[6]};\n  }\n`;\n_c12 = StyledButton;\nconst StyledButtonDisabled = styled.button`\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  color: white;\n  outline: none;\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  width: 100%;\n  font-size: 1.125rem;\n  margin-top: 1rem;\n  background: ${palette.gray[3]};\n`;\n_c13 = StyledButtonDisabled;\n\nconst RegisterPage = () => {\n  _s();\n\n  const history = useNavigate();\n  const text = '회원가입';\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState(''); //오류메시지 상태저장\n\n  const [nameMessage, setNameMessage] = useState('');\n  const [emailMessage, setEmailMessage] = useState('');\n  const [passwordMessage, setPasswordMessage] = useState('');\n  const [passwordConfirmMessage, setPasswordConfirmMessage] = useState(''); // 유효성 검사\n\n  const [isName, setIsName] = useState(false);\n  const [isEmail, setIsEmail] = useState(false);\n  const [isPassword, setIsPassword] = useState(false);\n  const [isPasswordConfirm, setIsPasswordConfirm] = useState(false); //아이디 중복 검사\n\n  const [isIdCheck, setIsIdCheck] = useState(false);\n\n  const idCheck = async e => {\n    e.preventDefault();\n\n    if (isName) {\n      try {\n        const user = await fetchRegister(name);\n\n        if (user) {\n          setIsIdCheck(false);\n          setIsName(false);\n          setNameMessage(\"이미 사용중인 아이디입니다.\");\n        } else {\n          setIsIdCheck(true);\n          setNameMessage(\"멋진 아이디네요!\");\n        }\n      } catch (error) {\n        // 실패하면 throw new Error(\"\") 값 출력\n        window.alert(error);\n      }\n    }\n  };\n\n  const onChangeName = e => {\n    setName(e.target.value);\n    setIsIdCheck(false);\n\n    if (e.target.value.length < 5 || e.target.value.length > 12) {\n      setNameMessage('5글자 이상 12글자 미만으로 입력해주세요.');\n      setIsName(false);\n    } else {\n      setNameMessage('올바른 이름 형식입니다!');\n      setIsName(true);\n    }\n\n    if (e.target.value.length === 0) {\n      setNameMessage('');\n      setIsName(false);\n    }\n  };\n\n  const onChangeEmail = e => {\n    const emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    const emailCurrent = e.target.value;\n    setEmail(emailCurrent);\n\n    if (!emailRegex.test(emailCurrent)) {\n      setEmailMessage('이메일 형식이 아닙니다.');\n      setIsEmail(false);\n    } else {\n      setEmailMessage('올바른 이메일 형식이에요! ');\n      setIsEmail(true);\n    }\n\n    if (e.target.value.length === 0) {\n      setEmailMessage('');\n      setIsEmail(false);\n    }\n  };\n\n  const onChangePassword = e => {\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\n    const passwordCurrent = e.target.value;\n    setPassword(passwordCurrent);\n\n    if (!passwordRegex.test(passwordCurrent)) {\n      setPasswordMessage('숫자+영문자+특수문자 조합으로 8자리 이상 입력해주세요.');\n      setIsPassword(false);\n    } else {\n      setPasswordMessage('안전한 비밀번호에요!');\n      setIsPassword(true);\n    }\n\n    if (e.target.value.length === 0) {\n      setPasswordMessage('');\n      setIsPassword(false);\n    }\n  }; // 비밀번호 확인\n\n\n  const onChangePasswordConfirm = e => {\n    setPasswordConfirm(e.target.value);\n\n    if (password === e.target.value) {\n      setPasswordConfirmMessage('비밀번호를 똑같이 입력했어요!');\n      setIsPasswordConfirm(true);\n    } else {\n      setPasswordConfirmMessage('비밀번호가 틀려요. 다시 확인해주세요.');\n      setIsPasswordConfirm(false);\n    }\n\n    if (e.target.value.length === 0) {\n      setPasswordConfirmMessage('');\n      setIsPasswordConfirm(false);\n    }\n  }; //폼 전송\n\n\n  const formSubmit = e => {\n    e.preventDefault();\n\n    const axios = require('axios');\n\n    const data = {\n      api_id: name,\n      email: email,\n      password: password\n    };\n    axios.post('http://localhost:8000/api/signup/', JSON.stringify(data)).then(res => {\n      history(`/View/:${res.data.id}`, {\n        state: res.data.id\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthTemplateBlock, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_container\",\n      children: [/*#__PURE__*/_jsxDEV(LeftBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-logo-wrap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"How many people passed by?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Use floating population counting technology and various statistical graphs on our website.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightBox, {\n        children: /*#__PURE__*/_jsxDEV(AuthFormBlock, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"/Register.do\",\n            method: \"post\",\n            children: [/*#__PURE__*/_jsxDEV(IdBox, {\n              children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n                className: name ? 'error' : '',\n                autoComplete: \"username\",\n                name: \"username\",\n                placeholder: \"\\uC544\\uC774\\uB514\",\n                onChange: onChangeName,\n                value: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this), isName ? /*#__PURE__*/_jsxDEV(IdCheckButton, {\n                onClick: idCheck,\n                children: \"\\uD655\\uC778\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(IdCheckButtonDisabled, {\n                disabled: true,\n                children: \"\\uD655\\uC778\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), isName ? /*#__PURE__*/_jsxDEV(SuccessBox, {\n              children: nameMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(ErrorBox, {\n              children: nameMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n              autoComplete: \"email\",\n              name: \"email\",\n              placeholder: \"\\uC774\\uBA54\\uC77C\",\n              onChange: onChangeEmail,\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this), isEmail ? /*#__PURE__*/_jsxDEV(SuccessBox, {\n              children: emailMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(ErrorBox, {\n              children: emailMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n              autoComplete: \"new-password\",\n              name: \"password\",\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n              type: \"password\",\n              onChange: onChangePassword,\n              value: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), isPassword ? /*#__PURE__*/_jsxDEV(SuccessBox, {\n              children: passwordMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(ErrorBox, {\n              children: passwordMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n              autoComplete: \"new-password\",\n              name: \"passwordConfirm\",\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n              type: \"password\",\n              onChange: onChangePasswordConfirm,\n              value: passwordConfirm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), isPasswordConfirm ? /*#__PURE__*/_jsxDEV(SuccessBox, {\n              children: passwordConfirmMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(ErrorBox, {\n              children: passwordConfirmMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), isName && isEmail && isPassword && isPasswordConfirm && isIdCheck ? /*#__PURE__*/_jsxDEV(StyledButton, {\n              onClick: formSubmit,\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(StyledButtonDisabled, {\n              disabled: true,\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {\n            children: text === '로그인' ? /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"\\uB85C\\uADF8\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterPage, \"PtmvYzz4SzYnbeUIs4Nhwim4d9c=\", false, function () {\n  return [useNavigate];\n});\n\n_c14 = RegisterPage;\nexport default RegisterPage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n\n$RefreshReg$(_c, \"AuthFormBlock\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"Footer\");\n$RefreshReg$(_c4, \"AuthTemplateBlock\");\n$RefreshReg$(_c5, \"RightBox\");\n$RefreshReg$(_c6, \"LeftBox\");\n$RefreshReg$(_c7, \"ErrorBox\");\n$RefreshReg$(_c8, \"SuccessBox\");\n$RefreshReg$(_c9, \"IdBox\");\n$RefreshReg$(_c10, \"IdCheckButton\");\n$RefreshReg$(_c11, \"IdCheckButtonDisabled\");\n$RefreshReg$(_c12, \"StyledButton\");\n$RefreshReg$(_c13, \"StyledButtonDisabled\");\n$RefreshReg$(_c14, \"RegisterPage\");","map":{"version":3,"names":["styled","palette","useState","fetchRegister","Link","useNavigate","AuthFormBlock","div","gray","StyledInput","input","Footer","AuthTemplateBlock","RightBox","LeftBox","ErrorBox","SuccessBox","IdBox","IdCheckButton","button","IdCheckButtonDisabled","StyledButton","StyledButtonDisabled","RegisterPage","history","text","name","setName","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","nameMessage","setNameMessage","emailMessage","setEmailMessage","passwordMessage","setPasswordMessage","passwordConfirmMessage","setPasswordConfirmMessage","isName","setIsName","isEmail","setIsEmail","isPassword","setIsPassword","isPasswordConfirm","setIsPasswordConfirm","isIdCheck","setIsIdCheck","idCheck","e","preventDefault","user","error","window","alert","onChangeName","target","value","length","onChangeEmail","emailRegex","emailCurrent","test","onChangePassword","passwordRegex","passwordCurrent","onChangePasswordConfirm","formSubmit","axios","require","data","api_id","post","JSON","stringify","then","res","id","state"],"sources":["C:/sujinworkspace/test_capstone/peoplecountfrount/src/pages/RegisterPage.js"],"sourcesContent":["import styled  from 'styled-components';\nimport palette from '../lib/styles/palette';\nimport { useState } from 'react';\nimport { fetchRegister } from './api/PatchRegister'\nimport { Link, useNavigate } from 'react-router-dom';\n\n/**\n * 회원가입 또는 로그인 폼을 보여줍니다.\n */\n\nconst AuthFormBlock = styled.div`\n  padding-top:20px;\n  h3 {\n    margin: 0;\n    color: ${palette.gray[8]};\n    margin-bottom: 1rem;\n  }\n  form{\n    width:484px;\n  }\n`;\n\n/**\n* 스타일링된 input\n*/\nconst StyledInput = styled.input`\n  display:block;\n  font-size: 1rem;\n  border: none;\n  border-bottom: 2px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n  margin-top: 1rem;\n\n`;\n\n/**\n* 폼 하단에 로그인 혹은 회원가입 링크를 보여줌\n*/\nconst Footer = styled.div`\n  margin-top: 2rem;\n  text-align: right;\n  a {\n    color: ${palette.gray[6]};\n    text-decoration: underline;\n    &:hover {\n      color: ${palette.gray[9]};\n    }\n  }\n`;\n\n\n\n/**\n * 회원가입 / 로그인 페이지의 레이아웃을 담당하는 컴포넌트입니다.\n */\n\n/* 화면 전체를 채움 */\nconst AuthTemplateBlock = styled.div`\n  min-width:1280px;\n  min-height:720px;\n  background-size: 1920px;\n  background-image: linear-gradient( rgba(20, 20, 20, 0.5), rgba(20, 20, 20, 0.5) ), url(\"https://images.unsplash.com/photo-1528642474498-1af0c17fd8c3?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1169&q=80\");\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  /* flex로 내부 내용 중앙 정렬 */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  .flex_container{\n    display:flex;\n    width: 1280px;\n    height:720px;\n    box-shadow: 27px 43px 43px -26px rgba(89,89,89,0.39);\n  }\n`;\n/* 흰색 박스 */\nconst RightBox = styled.div`\n  display:flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\n  padding: 2rem;\n  width: 640px;\n  height:720px;\n  border-radius: 0px 10px 10px 0px;\n  background: white;\n`;\nconst LeftBox = styled.div`\n  .logo-area {\n    display: block;\n    padding-bottom: 2rem;\n    text-align: center;\n    font-weight: bold;\n    letter-spacing: 2px;\n  }\n  font-family: 'Alata', sans-serif;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\n  padding: 2rem;\n  width: 640px;\n  height:720px;\n  border-radius: 10px 0px 0px 10px;\n  background-image: radial-gradient(ellipse farthest-corner at 0 140%, #616161 0%, #333 70%, #424242 70%);\n\n  .top-logo-wrap{\n    width:450px;\n    height:180px;\n  }\n  h1{\n    margin: auto;\n    width:450px;\n    font-size:51px;\n    color: white;\n    text-align: right;\n    opacity: 0.9;\n  }\n  p{\n    color: white;\n    width:450px;\n    margin: auto;\n    padding-top: 50px;\n    font-size:24px;\n    text-align: right;\n    opacity: 0.8;\n  }\n`;\n\nconst ErrorBox = styled.div`\n  color: #FF6E6E;\n`;\nconst SuccessBox = styled.div`\n  color: green;\n`;\nconst IdBox = styled.div`\n  display:flex;\n`;\n\nconst IdCheckButton = styled.button`\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  border: none;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  white-space:nowrap;\n  background: ${palette.gray[8]};\n  &:hover {\n    background: ${palette.gray[6]};\n  }\n`;\nconst IdCheckButtonDisabled = styled.button`\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  border: none;\n  color: white;\n  outline: none;\n  white-space:nowrap;\n  background: ${palette.gray[3]};\n`;\n\nconst StyledButton = styled.button`\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  width: 100%;\n  font-size: 1.125rem;\n  margin-top: 1rem;\n  background: ${palette.gray[8]};\n  &:hover {\n    background: ${palette.gray[6]};\n  }\n`;\nconst StyledButtonDisabled = styled.button`\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  color: white;\n  outline: none;\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  width: 100%;\n  font-size: 1.125rem;\n  margin-top: 1rem;\n  background: ${palette.gray[3]};\n`;\n\nconst RegisterPage = () => {\n  const history = useNavigate();\n  const text = '회원가입';\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirm, setPasswordConfirm] = useState('')\n\n  //오류메시지 상태저장\n  const [nameMessage, setNameMessage] = useState('')\n  const [emailMessage, setEmailMessage] = useState('')\n  const [passwordMessage, setPasswordMessage] = useState('')\n  const [passwordConfirmMessage, setPasswordConfirmMessage] = useState('')\n\n  // 유효성 검사\n  const [isName, setIsName] = useState(false)\n  const [isEmail, setIsEmail] = useState(false)\n  const [isPassword, setIsPassword] = useState(false)\n  const [isPasswordConfirm, setIsPasswordConfirm] = useState(false)\n\n  //아이디 중복 검사\n  const [isIdCheck, setIsIdCheck] = useState(false);\n\n  const idCheck = async e => {\n    e.preventDefault();\n    if (isName) {\n      try {\n        const user = await fetchRegister(name);\n          if(user){\n            setIsIdCheck(false)\n            setIsName(false)\n            setNameMessage(\"이미 사용중인 아이디입니다.\")\n          }else{\n            setIsIdCheck(true)\n            setNameMessage(\"멋진 아이디네요!\")\n          }        \n      } catch (error) { \n          // 실패하면 throw new Error(\"\") 값 출력\n        window.alert(error);\n      }\n    }\n  }\n\n  const onChangeName =  e => {\n    setName(e.target.value)\n    setIsIdCheck(false)\n    if (e.target.value.length < 5 || e.target.value.length > 12) {\n      setNameMessage('5글자 이상 12글자 미만으로 입력해주세요.')\n      setIsName(false)\n    } else {\n      setNameMessage('올바른 이름 형식입니다!')\n      setIsName(true)\n    }\n    if (e.target.value.length === 0 ) {\n      setNameMessage('')\n      setIsName(false)\n    }\n  };\n  const onChangeEmail = e => {\n    const emailRegex =\n      /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/\n      const emailCurrent = e.target.value\n      setEmail(emailCurrent)\n    if (!emailRegex.test(emailCurrent)) {\n      setEmailMessage('이메일 형식이 아닙니다.')\n      setIsEmail(false)\n    } else {\n      setEmailMessage('올바른 이메일 형식이에요! ')\n      setIsEmail(true)\n    }\n    if (e.target.value.length === 0 ) {\n      setEmailMessage('')\n      setIsEmail(false)\n    }\n  };\n  const onChangePassword = e => {\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/\n    const passwordCurrent = e.target.value\n    setPassword(passwordCurrent)\n\n    if (!passwordRegex.test(passwordCurrent)) {\n      setPasswordMessage('숫자+영문자+특수문자 조합으로 8자리 이상 입력해주세요.')\n      setIsPassword(false)\n    } else {\n      setPasswordMessage('안전한 비밀번호에요!')\n      setIsPassword(true)\n    }\n    if (e.target.value.length === 0 ) {\n      setPasswordMessage('')\n      setIsPassword(false)\n    }\n  };\n\n  // 비밀번호 확인\n  const onChangePasswordConfirm = e => {\n      setPasswordConfirm(e.target.value)\n      if (password === e.target.value) {\n        setPasswordConfirmMessage('비밀번호를 똑같이 입력했어요!')\n        setIsPasswordConfirm(true)\n      } else {\n        setPasswordConfirmMessage('비밀번호가 틀려요. 다시 확인해주세요.')\n        setIsPasswordConfirm(false)\n      }\n      if (e.target.value.length === 0 ) {\n        setPasswordConfirmMessage('')\n        setIsPasswordConfirm(false)\n      }\n  };\n\n  //폼 전송\n  const formSubmit = e => {\n    e.preventDefault()\n    const axios = require('axios')\n    const data = {api_id : name, email : email, password: password }\n    axios.post('http://localhost:8000/api/signup/', JSON.stringify(data))\n    .then((res)=>{      \n      history(`/View/:${res.data.id}`, { state: res.data.id });\n    })\n  }\n  return (\n    <AuthTemplateBlock>\n      <div className='flex_container'>\n        <LeftBox>\n          <div className=\"top-logo-wrap\"></div>\n          <h1>How many people passed by?</h1>\n          <p>Use floating population counting technology and various statistical graphs on our website.</p>\n        </LeftBox>\n        <RightBox>\n          <AuthFormBlock>\n            <h3>{text}</h3>\n            <form action='/Register.do' method=\"post\">\n              <IdBox>\n                <StyledInput\n                  className={(name ? 'error' : '')}\n                  autoComplete='username' \n                  name='username' \n                  placeholder='아이디' \n                  onChange={onChangeName}\n                  value={name}  \n                />\n                {(isName) ? (\n                  <IdCheckButton onClick={idCheck}>\n                    확인\n                  </IdCheckButton>\n                ) : (\n                  <IdCheckButtonDisabled disabled={true}>\n                    확인\n                  </IdCheckButtonDisabled>\n                )}\n              </IdBox>\n              {(isName) ? (\n                <SuccessBox>\n                  {nameMessage}\n                </SuccessBox>\n              ) : (\n                <ErrorBox>\n                  {nameMessage}\n                </ErrorBox>\n              )}\n              <StyledInput \n                autoComplete='email' \n                name='email' \n                placeholder='이메일' \n                onChange={onChangeEmail}\n                value={email}  \n              />\n              {(isEmail) ? (\n                <SuccessBox>\n                  {emailMessage}\n                </SuccessBox>\n              ) : (\n                <ErrorBox>\n                  {emailMessage}\n                </ErrorBox>\n              )}\n              <StyledInput \n                autoComplete='new-password' \n                name='password' \n                placeholder='비밀번호' \n                type='password' \n                onChange={onChangePassword}\n                value={password}\n              />\n              {(isPassword) ? (\n                <SuccessBox>\n                  {passwordMessage}\n                </SuccessBox>\n              ) : (\n                <ErrorBox>\n                  {passwordMessage}\n                </ErrorBox>\n              )}          \n              <StyledInput \n                autoComplete='new-password' \n                name='passwordConfirm' \n                placeholder='비밀번호 확인' \n                type='password' \n                onChange={onChangePasswordConfirm}\n                value={passwordConfirm}\n              />\n              {(isPasswordConfirm) ? (\n                <SuccessBox>\n                  {passwordConfirmMessage}\n                </SuccessBox>\n              ) : (\n                <ErrorBox>\n                  {passwordConfirmMessage}\n                </ErrorBox>\n              )}\n\n              {(isName && isEmail && isPassword && isPasswordConfirm && isIdCheck) ? (\n                <StyledButton onClick={formSubmit}>\n                  {text}\n                </StyledButton>\n              ) : (\n                <StyledButtonDisabled disabled={true}>\n                  {text}\n                </StyledButtonDisabled>\n              )}\n            </form>\n            <Footer>\n              {text === '로그인' ? (\n                <Link to=\"/register\">회원가입</Link>\n              ) : (\n                <Link to='/'>로그인</Link>\n              )}\n\n            </Footer>\n          </AuthFormBlock>\n        </RightBox>\n      </div>\n    </AuthTemplateBlock>\n  )\n}\n\nexport default RegisterPage;"],"mappings":";;;AAAA,OAAOA,MAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AAEA;AACA;AACA;;;AAEA,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAI;AACjC;AACA;AACA;AACA,aAAaN,OAAO,CAACO,IAAR,CAAa,CAAb,CAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA;AACA;AACA;;KAdMF,a;AAeN,MAAMG,WAAW,GAAGT,MAAM,CAACU,KAAM;AACjC;AACA;AACA;AACA,6BAA6BT,OAAO,CAACO,IAAR,CAAa,CAAb,CAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA,+BAA+BP,OAAO,CAACO,IAAR,CAAa,CAAb,CAAgB;AAC/C;AACA;AACA;AACA,CAdA;AAgBA;AACA;AACA;;MAlBMC,W;AAmBN,MAAME,MAAM,GAAGX,MAAM,CAACO,GAAI;AAC1B;AACA;AACA;AACA,aAAaN,OAAO,CAACO,IAAR,CAAa,CAAb,CAAgB;AAC7B;AACA;AACA,eAAeP,OAAO,CAACO,IAAR,CAAa,CAAb,CAAgB;AAC/B;AACA;AACA,CAVA;AAcA;AACA;AACA;;AAEA;;MAlBMG,M;AAmBN,MAAMC,iBAAiB,GAAGZ,MAAM,CAACO,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;AAsBA;;MAtBMK,iB;AAuBN,MAAMC,QAAQ,GAAGb,MAAM,CAACO,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMM,Q;AAaN,MAAMC,OAAO,GAAGd,MAAM,CAACO,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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"},"metadata":{},"sourceType":"module"}