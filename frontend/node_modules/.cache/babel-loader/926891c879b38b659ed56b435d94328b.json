{"ast":null,"code":"import _regeneratorRuntime from\"C:/sujinworkspace/test_capstone/peoplecountfrount/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/sujinworkspace/test_capstone/peoplecountfrount/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";//동기식 방식 ( async await 사용!!!!!)\nexport var fetchLogin=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref){var id,password,response,users,user;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:id=_ref.id,password=_ref.password;_context.next=3;return fetch(\"http://localhost:8000/api/login/\");case 3:response=_context.sent;if(!response.ok){_context.next=12;break;}_context.next=7;return response.json();case 7:users=_context.sent;//users안 객체들을 순회하면서 그 객체들의 id값과 form 컴포넌트에서 받음 account의 id값과 비교\n//서로 일치하는 것만 user에 대입\nuser=users.find(function(user){return user.api_id===id;});//일치하는 user가 없거나, 비밀번호가 틀리면 해당 에러 생성\nif(!(!user||user.password!==password)){_context.next=11;break;}throw new Error(\"아이디 또는 비밀번호가 일치하지 않습니다.\");case 11:return _context.abrupt(\"return\",user);case 12:throw new Error(\"서버 통신이 원할하지 않습니다.\");case 13:case\"end\":return _context.stop();}}},_callee);}));return function fetchLogin(_x){return _ref2.apply(this,arguments);};}();","map":{"version":3,"names":["fetchLogin","id","password","fetch","response","ok","json","users","user","find","api_id","Error"],"sources":["C:/sujinworkspace/test_capstone/peoplecountfrount/src/pages/api/PatchLogin.js"],"sourcesContent":["//동기식 방식 ( async await 사용!!!!!)\nexport const fetchLogin = async ({ id, password }) => {\n  const response = await fetch(\"http://localhost:8000/api/login/\");\n  \n  if (response.ok) {\n      //서버통신이 성공적으로 이루어지면 users에 json값 대입\n    const users = await response.json();\n    //users안 객체들을 순회하면서 그 객체들의 id값과 form 컴포넌트에서 받음 account의 id값과 비교\n    //서로 일치하는 것만 user에 대입\n    const user = users.find((user) => user.api_id === id);\n    //일치하는 user가 없거나, 비밀번호가 틀리면 해당 에러 생성\n    if (!user || user.password !== password) {\n      throw new Error(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\n    }\n\n    //모든게 일치하면 그 user 정보 return -> 이 return값이 form 컴포넌트 내 fetchLogin 함수 값으로 출력되는것\n    //form 컴포넌트에서 setUser값에 넣어야함\n    return user;\n  }\n\n  //서버 통신이 안이루어졌을떄\n  throw new Error(\"서버 통신이 원할하지 않습니다.\");\n};"],"mappings":"8RAAA;AACA,MAAO,IAAMA,WAAU,6FAAG,6KAASC,EAAT,MAASA,EAAT,CAAaC,QAAb,MAAaA,QAAb,uBACDC,MAAK,CAAC,kCAAD,CADJ,QAClBC,QADkB,mBAGpBA,QAAQ,CAACC,EAHW,gDAKFD,SAAQ,CAACE,IAAT,EALE,QAKhBC,KALgB,eAMtB;AACA;AACMC,IARgB,CAQTD,KAAK,CAACE,IAAN,CAAW,SAACD,IAAD,QAAUA,KAAI,CAACE,MAAL,GAAgBT,EAA1B,EAAX,CARS,CAStB;AATsB,KAUlB,CAACO,IAAD,EAASA,IAAI,CAACN,QAAL,GAAkBA,QAVT,gCAWd,IAAIS,MAAJ,CAAU,yBAAV,CAXc,yCAgBfH,IAhBe,eAoBlB,IAAIG,MAAJ,CAAU,mBAAV,CApBkB,wDAAH,kBAAVX,WAAU,6CAAhB"},"metadata":{},"sourceType":"module"}