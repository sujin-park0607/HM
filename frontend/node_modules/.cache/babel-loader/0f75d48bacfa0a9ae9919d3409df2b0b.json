{"ast":null,"code":"import _regeneratorRuntime from\"C:/sujinworkspace/test_capstone/peoplecountfrount/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/sujinworkspace/test_capstone/peoplecountfrount/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";//동기식 방식 ( async await 사용!!!!!)\nexport var fetchRegister=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(id){var response,users,user;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://localhost:8000/api/login/\");case 2:response=_context.sent;if(!response.ok){_context.next=9;break;}_context.next=6;return response.json();case 6:users=_context.sent;//users안 객체들을 순회하면서 그 객체들의 id값과 form 컴포넌트에서 받음 account의 id값과 비교\n//서로 일치하는 것만 user에 대입\nuser=users.find(function(user){return user.api_id===id;});//모든게 일치하면 그 user 정보 return -> 이 return값이 form 컴포넌트 내 fetchLogin 함수 값으로 출력되는것\n//form 컴포넌트에서 setUser값에 넣어야함\nreturn _context.abrupt(\"return\",user);case 9:throw new Error(\"서버 통신이 원할하지 않습니다.\");case 10:case\"end\":return _context.stop();}}},_callee);}));return function fetchRegister(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["fetchRegister","id","fetch","response","ok","json","users","user","find","api_id","Error"],"sources":["C:/sujinworkspace/test_capstone/peoplecountfrount/src/pages/api/PatchRegister.js"],"sourcesContent":["//동기식 방식 ( async await 사용!!!!!)\nexport const fetchRegister = async ( id ) => {\n  const response = await fetch(\"http://localhost:8000/api/login/\");\n  \n  if (response.ok) {\n      //서버통신이 성공적으로 이루어지면 users에 json값 대입\n    const users = await response.json();\n\n    //users안 객체들을 순회하면서 그 객체들의 id값과 form 컴포넌트에서 받음 account의 id값과 비교\n    //서로 일치하는 것만 user에 대입\n    const user = users.find((user) => user.api_id === id);\n    //모든게 일치하면 그 user 정보 return -> 이 return값이 form 컴포넌트 내 fetchLogin 함수 값으로 출력되는것\n    //form 컴포넌트에서 setUser값에 넣어야함\n    return user;\n  }\n\n  //서버 통신이 안이루어졌을떄\n  throw new Error(\"서버 통신이 원할하지 않습니다.\");\n};"],"mappings":"8RAAA;AACA,MAAO,IAAMA,cAAa,4FAAG,iBAAQC,EAAR,kKACJC,MAAK,CAAC,kCAAD,CADD,QACrBC,QADqB,mBAGvBA,QAAQ,CAACC,EAHc,+CAKLD,SAAQ,CAACE,IAAT,EALK,QAKnBC,KALmB,eAOzB;AACA;AACMC,IATmB,CASZD,KAAK,CAACE,IAAN,CAAW,SAACD,IAAD,QAAUA,KAAI,CAACE,MAAL,GAAgBR,EAA1B,EAAX,CATY,CAUzB;AACA;AAXyB,gCAYlBM,IAZkB,cAgBrB,IAAIG,MAAJ,CAAU,mBAAV,CAhBqB,wDAAH,kBAAbV,cAAa,4CAAnB"},"metadata":{},"sourceType":"module"}